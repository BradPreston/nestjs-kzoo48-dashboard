// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Entry {
  id                Int       @id @default(autoincrement())
  firstName         String   
  lastName          String   
  phone             String
  email             String    @unique()
  category          Category  @relation(fields: [categoryId], references: [id])
  categoryId        Int       
  teamName          String    @unique
  additionalEmails  String[]  @default([])
  payment           Payment?  
  paymentId         String?   @unique()
  paid              Boolean   @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique()
  entry     Entry[]     
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Volunteer {
  id        Int       @id @default(autoincrement())
  firstName String   
  lastName  String   
  phone     String
  email     String    @unique()
  role      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Payment {
  id          Int       @id @default(autoincrement())
  eventId     String    @unique()
  entryName   String
  entryEmail  String    @unique()
  paid        Boolean
  orderAmount Int
  receiptUrl  String
  entry       Entry?    @relation(fields: [entryId], references: [id])
  entryId     Int?      @unique()
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Status {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}